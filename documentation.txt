Udemy NextJS & Open AI Course John Smilga


Section 01: Next.js Tutorial

01. Course Resources

02. Discord Channel

03. Introduction to Next.js
-otvorimo web stranicu: https://nextjs.org/

04. Tutorial Overview

05. Update !!!
-instalirati verziju 14 Next.js

06. Create New Next.js App
-u terminalu ukucamo komandu npx create-next-app@14 nextjs-tutorial

07. Files and Folder Structure
-u nextjs-tutorial/README.md fajl dodan opis izrade projekta

08. Home Page
-u app/page.js komponenti kreiramo i eksportujemo kao default funkciju HomePage()

09. More Pages
-u folderu app kreiramo folder about i komponentu page.js
-u about/page.js komponenti kreiramo i eksportujemo kao default funkciju AboutPage()
-otvorimo rutu http://localhost:3000/about

10. Link Component
-otvorimo link: https://nextjs.org/docs/pages/api-reference/components/link
-u komponentu app/page.js importujemo komponentu Link
-u roditelj div element dodajemo komponentu Link sa otvorenim i zatvorenim tagom
-komponenti Link dodajemo prop href i className
-ponovimo isti postupak u komponenti about/page.js

11. Nested Routes
-u folderu about kreiramo folder info i komponentu page.js

Quiz 1: Fundamentals Quiz

12. First Challenge
-u folderu app kreiramo folder client, drinks, prisma-example, query i tasks
-u svakom folderu kreiramo komponente page.js

13. CSS
-otvorimo web stranicu: https://daisyui.com/
-otvorimo web stranicu: https://tailwindcss.com/
-otvorimo link: https://www.npmjs.com/package/daisyui
-otvorimo link: https://www.npmjs.com/package/@tailwindcss/typography
-u terminalu instaliramo pakete Daisy UI i Tailwind CSS Typography
-u terminalu ukucamo komande: npm i -D daisyui@3.9.4 i npm i @tailwindcss/typography

14. TailwindCSS

15. DaisyUI

16. Layout File
-u komponenti layout.js, promjenjen opis projekta u varijabli const metadata
-u jsx-u kreiran nav element 

17. Navbar Challenge
-kreiramo folder components i komponentu Navbar.jsx
-u komponentu Navbar.jsx importujemo komponentu Link
-kreiramo varijablu niz links
-kreiramo i eksportujemo funkciju Navbar() kao default
-u jsx-u kreiramo nav element sa Tailwind CSS klasama
-u nav elementu kreiramo div element sa Tailwind CSS klasama
-u div element dodajemo komponentu Link sa prop href i className
-kreiramo ul element sa Tailwind CSS klasama
-u ul element dodajemo metodu links?.map()
-u funkciji map(), u return izjavi kreiramo li element
-u li element dodajemo komponentu Link sa prop href i className
-u komponentu layout.js importujemo komponentu Navbar.jsx
-u jsx-u, u body element dodajemo komponentu Navbar
-kreiramo main element sa Tailwind CSS klasama
-u main elementu dinamicki prikazujemo prop children

18. Server Component vs Client Component
-otvorimo link: https://nextjs.org/docs/app/building-your-application/rendering/server-components
-otvorimo link: https://nextjs.org/docs/app/building-your-application/rendering/client-components

19. Counter Challange
-u komponenti app/page.js, HTML elementima dodajemo Tailwind CSS klase
-u komponentu client/page.js importujemo funkciju useState iz paketa React
-kreiramo state varijablu const count i set funkciju setCount
-u jsx-u kreiramo button element sa Daisy UI klasama
-button elementu dodajemo dogadaj onClick
-u dogadaj onClick dodajemo anonimnu funkciju
-u anonimnu funkciju proslijedujemo funkciju setCount()
-dodajemo direktivu 'use client'

20. Fetch data
-u komponenti drinks/page.js, funkciji DrinksPage() dodajemo asinhronost
-kreiramo varijablu const url
-u funkciji DrinksPage() dodajemo metodu await fetch(url)
-vrijednost metode await fetch(url) pohranjujemo u varijablu const response
-dodajemo metodu await response.json()
-vrijednost metode await response.json() pohranjujemo u varijablu const data

21. Loading Component
-u komponenti drinks/page.js kreiramo funkciju fetchDrinks()
-u funkciju fetchDrinks() dodajemo metodu await new Promise() i varijable const response i const data
-dodajemo izjavu return data
-u funkciju DrinksPage() dodajemo funkciju await fetchDrinks()
-vrijednost funkcije await fetchDrinks() pohranjujemo u varijablu const drinks
-kreiramo loading.js fajl
-u loading.js fajlu kreiramo i eksportujemo funkciju loading() kao default

22. Error Component
-u folderu drinks kreiramo error.js fajl
-u error.js fajlu kreiramo i eksportujemo funkciju error() kao default
-u komponenti drinks/page.js, u funkciju fetchDrinks() dodajemo uslov if (!response.ok)

23. Nested Layouts
-u folderu drinks kreiramo layout.js fajl
-u layout.js fajlu kreiramo i eksportujemo funkciju DrinksLayout()
-funkciji DrinksLayout() dodajemo parametar destruktuirani prop children
-u jsx-u kreiramo HTML elemente sa Tailwind CSS klasama
-u roditelj div element dinamicki prikazujemo vrijednost prop children

24. Dynamic Routes
-u folderu drinks kreiramo folder [id] i komponentu page.js
-u [id]/page.js fajlu kreiramo i eksportujemo funkciju SingleDrinkPage() kao default
-funkciji SingleDrinkPage() dodajemo parametar destruktuirani prop params

25. Drinks List - Challange
-u folderu components kreiramo komponentu DrinksList.jsx
-funkciji DrinksList() dodajemo parametar destruktuirani prop drinks
-u komponentu drinks/page.js importujemo komponentu DrinksList.jsx
-u jsx-u dodajemo komponentu DrinksList sa prop drinks
-u komponenti DrinksList.jsx, u jsx-u kreiramo ul element kao roditelj element sa Tailwind CSS klasama
-u ul element dodajemo metodu drinks.map()
-u funkciji map() kreiramo li element sa prop key
-importujemo komponentu Link
-u li element dodajemo komponentu Link sa prop href
-u prop href dodajemo dinamicki link

26. Single Drink - Challenge
-u komponenti [id]/page.js kreiramo varijablu const url
-importujemo komponentu Link
-kreiramo asinhronu funkciju getSingleDrink() sa parametrom id
-u funkciji getSingleDrink() kreiramo varijablu const res
-dodajemo uslov if (!res.ok)
-u uslov if dodajemo funkciju throw new Error()
-funkciji SingleDrinkPage() dodajemo asinhronost
-u funkciji SingleDrinkPage() kreiramo varijablu const data
-kreiramo varijable const title i const imgSrc
-u jsx-u, u roditelj div element dodajemo komponentu Link sa prop href i className

27. Static Images
-u komponentu [id]/page.js importujemo sliku drinkImg
-preuzmemo sliku
-kreiramo folder public
-preuzetu sliku pohranjujemo u folder public
-otvorimo link: https://nextjs.org/docs/pages/api-reference/components/image
-importujemo komponentu Image iz paketa Next Image
-u jsx-u dodajemo komponentu Image sa prop src, alt i className

28. Remote Images
-u komponenti [id]/page.js dodajemo komponentu Image sa prop src, alt, width, height, className i priority
-otvorimo link: https://stackoverflow.com/questions/76164057/next-js-hostname-not-configured-under-images-in-next-config-js-even-though-remot
-u next.config.mjs fajl dodajemo objekt images i niz remotePatterns

29. Responsive Images
-u komponentu DrinksList.jsx importujemo komponentu Image
-u jsx-u ul elementu dodajemo Tailwind CSS Grid klase
-u jsx-u, u komponenti Link kreiramo div element sa Tailwind CSS klasu
-u div element dodajemo komponentu Image
-komponenti Image dodajemo prop src, alt, className, sizes i fill

30. More Routing
-u folderu app kreiramo folder _css i styles.css fajl
-kreiramo foldere (dashboard), auth i komponentu page.js
-u folderu auth kreiramo folder [[...sign-in]] i komponentu route.js
-u pretrazivacu otvorimo rutu: http://localhost:3000/auth

31. Prisma Setup
-otvorimo web stranicu: https://www.prisma.io/
-otvorimo link: https://www.npmjs.com/package/prisma
-otvorimo link: https://www.npmjs.com/package/@prisma/client
-u terminalu instaliramo pakete Prisma i Prisma Client
-u terminalu ukucamo komande npm install prisma --save-dev i npm install @prisma/client
-u terminalu ukucamo komandu npx prisma init
-generisemo folder prisma i schema.prisma fajl
-u .gitignore fajl dodajemo .env fajl
-otvorimo link: https://www.prisma.io/docs/getting-started/quickstart-sqlite
-u .env fajl dodajemo u varijablu DATABASE_URL vrijednost "file:./dev.db"
-u schema.prisma fajl dodajemo u objekt datasource db key - value par  provider = "sqlite"
-otvorenim link: https://www.prisma.io/docs/guides/other/troubleshooting-orm/help-articles/nextjs-prisma-client-dev-practices#solution
-kreiramo folder utils i db.ts fajl
-u db.ts fajl kopiramo kod iz dokumentacije